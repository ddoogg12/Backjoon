# 트리의 지름 (골드 3)
# 해결 방안
# 1.DFS로 2번 돌림

v = int(input())

arr = [ [] for _ in range(v+1) ]

for _ in range(v):
    path = list(map(int, input().split()))
    path_len = len(path)
    for i in range(1, path_len // 2):
        arr[path[0]].append([path[2 * i -1], path[2*i]])

Parents = [0 for _ in range(v+1)]

def DFS(start, tree, parents):
    # e = 노드 d = 간선
    for e, d in tree[start]:
        if parents[e] == 0:
            parents[e] = parents[start] + d
            DFS(e, tree, parents)

DFS(1, arr, Parents)
Parents[1] = 0

tmpmax = 0
index=0

for i in range(len(Parents)):
    if tmpmax < Parents[i]:
        tmpmax = Parents[i]
        index = i
Parents2 = [0 for _ in range(v+1)]
DFS(index, arr, Parents2)
Parents2[index] = 0
print(max(Parents2))
