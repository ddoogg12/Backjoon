#트리의 부모 찾기 (실버 2)
# 해결방안
# 1.재귀함수 실행시 깊이제한은 디폴트가 1000이므로 setrecursionlimit를 사용해서 늘려줘야함
# 2. DFS을 이용하여 부모노드 찾으면서 구현 가능
# 시행 착오
# 1. 깊이제한으로 인해 런타임 에러가 발생하여 setrecursionlimit를 찾는데 오래걸렸음.


import sys
input = sys.stdin.readline
#트리구조일시 깊이제한 늘림
sys.setrecursionlimit(10**9)

n = int(input())
#트리
Tree = [[] for _ in range(n+1)]
#부모노드
Parents = [0 for _ in range(n+1)]
#트리 입력
for i in range(n-1):
    a, b = map(int, input().split())
    Tree[a].append(b)
    Tree[b].append(a)    

#DFS 실행
def DFS(start, tree, parents):
    for i in tree[start]:
        #부모노드가 0일시 재귀실행
        if parents[i] == 0:
            parents[i] = start
            DFS(i, tree,parents)

DFS(1, Tree, Parents)

for i in range(2, n + 1):
    print(Parents[i])
